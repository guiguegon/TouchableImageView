apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

def versionLibCode = 1
def versionLibName = '1.0.0'

Properties properties = new Properties()
if (project.rootProject.file('local.properties').exists()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
}

ext {
    // Where you will see your artifact in Bintray's web interface
    // The "bintrayName" should match the name of the Bintray repo.
    bintrayRepo = 'maven'
    bintrayName = 'TouchableImageView'

    // Maven metadata
    publishedGroupId = 'es.guiguegon'
    libraryName = 'TouchableImageView'
    // Save yourself a head ache, and set this equal to the name of the Android Studio library
    // module. The artifact name needs to match the name of the library.
    artifact = 'touchableimageview'

    libraryDescription = 'Touchable ImageView'
    libraryVersion = versionLibName

    developerId = 'guiguegon'
    developerName = 'Guillermo Guerrero Gonz√°lez'
    developerEmail = 'guiguegon@gmail.com'
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "TouchableImageView"
        licenses = ["Apache-2.0"]
        publish = true
        version {
            name = versionLibName
            desc = 'Touchable ImageView'
            vcsUrl = 'https://github.com/guiguegon/TouchableImageView.git'
        }
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"

    defaultConfig {
        minSdkVersion 11
        targetSdkVersion 25
        versionCode versionLibCode
        versionName versionLibName

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile 'junit:junit:4.12'
}

if (project.rootProject.file('local.properties').exists()) {
    apply from: 'https://raw.githubusercontent.com/borjabravo10/JCenter/master/installv1.gradle'
    apply from: 'https://raw.githubusercontent.com/borjabravo10/JCenter/master/bintrayv1.gradle'
}

allprojects {
    tasks.withType(Javadoc) {
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addStringOption('encoding', 'UTF-8')
    }
}

bintrayUpload.mustRunAfter install
task remoteUpload(dependsOn: ['install', 'bintrayUpload'])